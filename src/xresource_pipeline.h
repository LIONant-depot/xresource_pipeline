#ifndef XRESOURCE_PIPELINE_H
#define XRESOURCe_PIPELINE_H
#pragma once

#include "xcore.h"

//------------------------------------------------------------
// OLD DESIGN. Is here to show progression in the concepts
//------------------------------------------------------------
// Compilers expect a specific folder format and naming of assets.
//      Master Directory                                    // This is the directory which should contain all the projects for the engine (Can be named anything)
//      + Compiled.dbase                                    // All resources that are compiled for any project end up in this directory (Note that everything in this directory is generated)
//          + Resources                                     // Top folder indicating that all the compiled resources will be inside here
//              + (Type of Project Guid)                    // Particular types of projects "library", "Project", "Plugins", etc... ((guid))
//                  + (Instance_guid)                       // Particular Instance of the libary or project ((guid))
//                      + Logs.base                         // Different logs generated by the compiler
//                          + Resource_Type_Guid            // Which resource type are we dealing with
//                              + Resource_Instance_Guid    // folder of the particular resource
//                      + Windows.platform                  // Resources that are compiled for the windows platform
//                          + Data                          // Inside here you will find the final resources with their full guids in a flat list
//                      + Generated.base                    // Temporary generated assets which are then compiled into the platform specific directories
//                          + Resource_Type_Guid            // Different types of resources
//                              +Resource_Instance_Guid     // Instance of a resource
//      + Projects.dbase                                    // Here is where all the projects created in this system will be 
//          + Resources                                     // Used to indicate that below here are the actual projects
//              + Apps@(Type of Project Guid)               // Particular types of projects "library", "Project", "Plugins", etc... ((guid))
//                  + (Instance Guid)                       // This is a particular instance of a Library or project, etc.. ((guid))
//                      + Resources                         // This is where we will have a list of resource files that required compilation
//                          +(Resource_type_guid)           // Particular resource types (textures, meshes, etc)
//                              + Resource_Instance_Guid    // A particular resource Instance guid which requires compilation
//      + Resource.pipeline                                 // Main directory for the installed resources pipelines
//          + Compilers                                     // Location for the compilers
//              + ( Resource Type Guid )                    // Resource types
//                  + Debug                                 // Debug compilers used for development and debugging issues
//                  + Release                               // Here are the standard compilers
//                  * DefaultSettings.txt                   // The default settings for the compilers
//                  * DefaultIcon.dds                       // Icon for the editor and such
//          * Configuration.txt                             // Configuration of the pipeline contains a map between compilers guids and names
//      + Lion.app                                          // Core library contains all the cpp files here
//                                                          //
//------------------------------------------------------------
// NEW DESIGN. Simpler and more flexible and more human readable ... 
//------------------------------------------------------------
// 
//  + Database Name.qlion_rcdbase               // All resources that are compiled are here. Deleting this directory should be ok since everything is generated.
//      + (full-guid)                           // Particular Instance of the library or project ((guid))
//          + Logs.base                         // Different logs generated by the compiler
//              + Resource_Type_Guid            // Which resource type are we dealing with
//              + Resource_Instance_Guid        // folder of the particular resource
//          + Windows.platform                  // Resources that are compiled for the windows platform
//              + Data                          // Inside here you will find the final resources with their full guids in a flat list
//          + Generated.base                    // Temporary generated assets which are then compiled into the platform specific directories
//              + Resource_Type_Guid            // Different types of resources
//              +Resource_Instance_Guid         // Instance of a resource
//  + Project Name.qlion_project                // Project can be located any where (This can go to source control)
//      + Resources                             // Resources for this project/library
//          + "Resource Type"                   // Different resource types such (textures, geom, editor pluings, etc..)
//          + "Editor.plugins"                  // Example of a resource type
//              + Editor                        // Inside this resource type may can be organize however it wants
//              + Plugin-guid                   // ...
//          + "Resource.pipeline"               // Example of another resource
//              + "Compiler-guid"               // Every compiler guid
//                  + Debug                     // Debug compilers used for development and debugging issues
//                  + Release                   // Here are the standard compilers
//                  * DefaultSettings.txt       // The default settings for the compilers
//                  * DefaultIcon.dds           // Icon for the editor and such
//      + Scenes                                // Scenes
//      + Configs                               // Configuration files
//  + Version_23.qlion_editor                   // Editor folder
//      + Resources                             // Resources for the editor
//          + "Editor.plugins"                  // Example of a resource type, Editor plugins
//          + "Resource.pipeline"               // Example of another resource type
//      + Config                                // Configuration files
//      * Editor.exe                            // exe for the editor
// 
//------------------------------------------------------------
// 
// Note that this system does not deal with the source assets. Those should be located in a different set of directories usually managed by artist 
// 
// A resource is fully identified using their full_guids. These full guids contains: (Asset_type_guid) + (Asset_Instance_Guid)
// So they are a total of 128bits.
// 
// Input to compilers
// ------------------
// -BUILDTYPE Oz -TARGET WINDOWS -LIBRARY "Path to the library" -RESOURCE ff.ff/ff
// 
// Steps to build data base
// ------------------------
// "Path to the Library"/Config/ResourcePipeline.config
//      - Destination folder for this resource ("Database Name.qlion_rcdbase")
//      - Location of the resource pipeline ("Where are the compilers for each resource types")
//      - Guid of the library/project
// 
// "Path to the Library"/Resource/"Resource Pipeline type guid"/"Particular Asset type Guid"/DefaultSettings.config
//      - What should be the default compiler settings
//      - originally copied from some where .... may be
// 
// "Path to the library"/Resource/"Resource Type Guid"/"Resource Instance Guid"/Descriptor.config
//      - Custom options to compile this particular resource
//      - Location of assets
// 
// Loading the resource 
// -----------------------
// Loading the resources you will need:
// + List of all libraries (Guids and Paths)
// 
// A resource fill need to be search in each of the resource libraries until it finds it or fails
// 
//------------------------------------------------------------

namespace xresource_pipeline
{
    enum class error : std::uint32_t
    { GUID          = xcore::guid::unit<32>("xresource_pipeline").m_Value
    , OK            = 0
    , FAILURE       
    , DISPLAY_HELP
    };
}

//
//  
//
#include "xresource_pipeline_compiler_base.h"


#endif